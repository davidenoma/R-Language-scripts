x = "hello world"
x
class(x)
y = 3.14
class(y)
y * 2
y + "l"
z = str(y+"l")
x
z = 15L
type(z)
class(z)
z = 15
class(z)
z
x = z + 2i
x
t = false
t = FALSE
T
class(t)
age = c(10,21,33)
age
type(age)
class(age)
dim(age)
length(age)
names(age)
x = list(age,weight = c(30,65,80))
x
x$age
x$weight
x$age
names(x)
age
x.age
x.weight
x$weight
length(x)
dim(x)
names(x)
class(age)
x = c(12,123,"asd")
x
class(x)
x[1]
x[1]*2
x[1]+2
x[1]."2"
q()
if(!require("pacman")) install.packages("pacman")
clear
clear()
if(!require("pacman")) install.packages("pacman")
p_load(psych)
p_load(psych)
p_load(psych)
p_load("psych")
p_load(psych)
p_load(psych)
if(!require("pacman")) install.packages("pacman")
p_load(psych)
b5 = read.csv('b5',header = T)
b5 = read.csv('b5.csv',header = T)
b5 = read.csv('b5.csv',header = T)
b5 = read.csv("b5.csv",header = T)
b5 <- read.csv("b5.csv",header = T)
b5 <- read.csv("b5.csv",header = T)
b5 <- read.csv("/b5.csv",header = T)
if(!require("pacman")) install.packages("pacman")
p_load(psych)
p_depends(psych)
p_load(GPArotation)
#Reading the CSV file
b5 <- read.csv("b5.csv",header = T)
b5 <- read.csv("C:\Users\kora\Desktop\Lynda.Data.Science.Foundations.Data.Mining\b5.csv",header = T)
b5 <- read.csv("C:/Users/kora/Desktop/Lynda.Data.Science.Foundations.Data.Mining/b5.csv",header = T)
View(b5)
View(b5)
colnames(b5)
boxplot(b5)
temp = data[,"Temperature"]
data1
data.frame(name="John",surname="Smith")
#First creation of a data frame
data.frame(name="John",surname="Smith")
#Create datafrom with vector column values.
data1 = data.frame(name=c("David","Job"),surname=c("Enoma","Welch"))
class(data1)
nrow(data1)
ncol(data1)
#to join data frames
data2 = data.frame(name="Peter",surname="Bishop")
data = rbind(data1,data2)
dat
data
data1
data2
data
data = cbind(data,height=c(11,123,33))
data
data
data[1]
data[1:3]
data[,]
data[,1]
data[1,]
data[,c(1,2)]
data[-1]
data1
data[-1]
data
data[-1]
data[-2]
data
data[-3]
data[0]
data[c('1','2')]
data[c("1","2")]
data[c("1","2"),c("name","height")]
data
colnames(data)
rownames(data)
person1 = list(Name="John", Surname = "Smith")
person["name"]
person1 = list(Name="John", Surname="Smith")
person1
person1["name"]
person1
person1$Name
data1 = data.frame(State="Texas",Temperature="56.4")
data1
data1
data1
data2 = read.csv("3-7 data.csv")
pwd
setwd()
source('~/R-scripts/learning-dataframe-lists.R')
#First creation of a data frame
data.frame(name="John",surname="Smith")
#Create datafrom with vector column values.
data1 = data.frame(name=c("David","Job"),surname=c("Enoma","Welch"))
class(data1)
nrow(data1)
ncol(data1)
#to join data frames
data2 = data.frame(name="Peter",surname="Bishop")
data = rbind(data1,data2)
rbind(data1,data2,data1)
data[,c(1,2)]
data[,1:2]
data[-1]
#Subsetting on columnnames is possible
#The first argument below is the column name
data[c("1","2"),c("name","height")]
subset(data,name=="David")
subset(data, height <= 100)
colnames(data)
rownames(data)
#We can also rename the column and rownames
rownames(data) = c("first","second","third")
colnames(data) = c("First_name","Surname","Height")
##THIS SECTION DEALS WITH THE LIST DATATYPE
person1 = list(name="john",age=10)
person1[[1]]
cars_john = c("hinda","Ferrari")
person = list(name="Johh", surname="Wayo", cars = cars_john)
person$cars[2] == "Ferrari"
person[c(1,2)]
#Adding new elements to list
person1[["height"]] = 180
person1
#Element of any class can be added
person1[["ChildrenNumber"]] = 2
data_john = data.frame(ChildrenName= c("Tom","Kate"),age=(4))
data_john["weight"] = c("89 kg", "66 kg")
data_john["height"] = 899
##<More complicated example
person2 = list(Name="Tim", Surname= "Cook")
all_people = list(first=person1,second=person2)
all_people[["first"]][["Name"]]
##This is the section of the lists
person1 = list(Name="John", Surname = "Smith")
person["name"]
##Some work with Data Frames
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
data = rbind(data1,data2)
data[7,"Temperature"]
data[data[,"State"]=="Colorado","Temperature"] = 47
data [data[,2]=="Colorado","Temperature"] = 54
data[data[,"State"]=="Colorado",]
temp = data[,"Temperature"]
temp = data[,"Temperature"]
temp_celcius = (temp - 32)/1.8
data = cbind(data,Temperature_C = temp_celcius)
colnames(data)
colnames(data)[2] = "Temperature_F"
person$cars[2] == "Ferrari"
person[c(1,2)]
#First creation of a data frame
data.frame(name="John",surname="Smith")
#Create datafrom with vector column values.
data1 = data.frame(name=c("David","Job"),surname=c("Enoma","Welch"))
class(data1)
nrow(data1)
ncol(data1)
#to join data frames
data2 = data.frame(name="Peter",surname="Bishop")
data = rbind(data1,data2)
rbind(data1,data2,data1)
data[,c(1,2)]
data[,1:2]
data[-1]
#Subsetting on columnnames is possible
#The first argument below is the column name
data[c("1","2"),c("name","height")]
subset(data,name=="David")
subset(data, height <= 100)
colnames(data)
rownames(data)
#We can also rename the column and rownames
rownames(data) = c("first","second","third")
colnames(data) = c("First_name","Surname","Height")
##THIS SECTION DEALS WITH THE LIST DATATYPE
person1 = list(name="john",age=10)
person1[[1]]
cars_john = c("hinda","Ferrari")
person = list(name="Johh", surname="Wayo", cars = cars_john)
person$cars[2] == "Ferrari"
person[c(1,2)]
#Adding new elements to list
person1[["height"]] = 180
person1
#Element of any class can be added
person1[["ChildrenNumber"]] = 2
data_john = data.frame(ChildrenName= c("Tom","Kate"),age=(4))
data_john["weight"] = c("89 kg", "66 kg")
data_john["height"] = 899
##<More complicated example
person2 = list(Name="Tim", Surname= "Cook")
all_people = list(first=person1,second=person2)
all_people[["first"]][["Name"]]
##This is the section of the lists
person1 = list(Name="John", Surname = "Smith")
person["name"]
##Some work with Data Frames
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
data = rbind(data1,data2)
data[7,"Temperature"]
data[data[,"State"]=="Colorado","Temperature"] = 47
data [data[,2]=="Colorado","Temperature"] = 54
data[data[,"State"]=="Colorado",]
temp = data[,"Temperature"]
temp = data[,"Temperature"]
temp_celcius = (temp - 32)/1.8
data = cbind(data,Temperature_C = temp_celcius)
colnames(data)
colnames(data)[2] = "Temperature_F"
source('~/R-scripts/learning-dataframe-lists.R')
source('~/R-scripts/learning-dataframe-lists.R')
data[c("1","2"),c("name","height")]
data
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
getwd()
setwd("C:/Users/kora/Documents/R-scripts")
getwd()
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
ls
pwd
data[data[,"State"]=="Colorado","Temperature"] = 47
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
data = rbind(data1,data2)
data1 = data.frame(State="Texas",Temperature="56.4")
data2 = read.csv("3-7 data.csv")
data = rbin(data1,data2)
data = rbind(data1,data2)
data2
data1
data = rbind(data1,data2)
data2
data2
data1
data = cbind(data1,data2)
data
data = cbind(data1,data2)
data = rbind(data1,data2)
data = rbind(data2,data1)
data
data = rbind(data2,data1)
data[7,"Temperature"]
data[data[,"State"]=="Colorado","Temperature"] = 47
data [data[,2]=="Colorado","Temperature"] = 54
data[data[,"State"]=="Colorado",]
temp = data[,"Temperature"]
temp = data[,"Temperature"]
temp_celcius = (temp - 32)/1.8
data = cbind(data,Temperature_C = temp_celcius)
data = cbind(data,Temperature_C = temp_celcius)
data = cbind(data,Temperature_C = temp_celcius)
data
data[data[,"State"]]
data[data[,"State"],]
data[data[,"State"]=="Colorado","Temperature"]
data[data[,"State"]=="Colorado","Temperature"] = 47
data[data[,"State"]=="Colorado","Temperature"]
data[data[,"State"]=="Colorado","Temperature"] = 88
data[data[,"State"]=="Colorado","Temperature"]
data[data[,2],]
data[,2]
temp = data[,"Temperature"]
temp = data[,"Temperature"]
temp_celcius = (temp - 32)/1.8
temp
temp - 32
temp
class(temp)
int(temp)
integer(temp)
temp
temp[:]
temp[,]
temp[1]
temp[3]
temp.length()
length(temp)
for (tm in temp) {
print(tm)
}
for (tm in temp) {
print(tm)
}
data
temp_celcius = (temp - 32)/1.8
temp_celcius = ([temp] - 32)/1.8
library('ggplot2')
library(knitr)
palette(tropical)
tropical = c ('darkorange','dodgerblue','hotpink','limegreen','yellow')
palette(tropical)
library(knitr)
knit_hooks$set(setPch = function(before,options,envir){
if(before) par(pch = 19)
})con=url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
opts_chunk$set(setPch = TRUE)
knit_hooks$set(setPch = function(before,options,envir){
if(before) par(pch = 19)
})con=url("http://bowtie-bio.sourceforge.net/recount/ExpressionSets/bodymap_eset.RData")
load(file=con)
opts_chunk$set(setPch = TRUE)
knitr::opts_chunk$set(fig.width = 5,fig.height = 5, size = "footnotesize", warning = FALSE, message = FALSE)
ls()
close(con)
bm = bodymap.eset
pdata = pData(bm)
edata = exprs(bm)
fdata = fData(bm)
table(pdata$gender)
table(pdata$gender, pdata$race)
summary(edata)
sum(pdata$age == ' ', na.rm = TRUE)
dim(edata)
is.na(edata)[1,]
#This sums all N/As and to check for NAs
sum(is.na(edata))
gene_na = rowSums(is.na(edata))
table(gene_na)
sampe_na = colSums(is.na(edata))
table(sample_na)
#Always check for missing values
c(dim(pdata), dim(edata), dim(fdata))
boxplot(edata[,1])
boxplot(log2(edata[,1]+1))
boxplot(log2(edata + 1),col=4,range = 0)
par(mfrom = c(1,2))
hist(log2(edata[,1]+1),col = 4)
hist(log2(edata[,2]+1),col = 4)
par(mfrom = c(1,1))
plot(density(log2(edata[,1]+1)),col = 3)
plot(density(log2(edata[,1]+1)),col = 4)
#The lines command is to allow overlay of the plots
lines(density(log2(edata[,2]+1)),col = 4)
qqplot(log2(edata[,1]+1),log2(edata[,2]+1))
abline(c(0,1))
##Ma plot
mm = log2(edata[,1] + 1) - log2(edata[,2] + 1)
aa = log2(edata[,1] + 1) + log2(edata[,2] + 1)
plot(aa, mm , col= 9)
edata = as.data.frame(edata)
#Removing row means less than 1 to eliminate the zero values
filt_edata  = filter(edata,rowMeans(edata) > 1)
dim(filt_edata)
boxplot(as.matrix(log2(filt_edata + 1)), col = 3)
#Compare datasets to annotation to ensure correctness
aeid = as.character(fdata[,1])
#to extract chromosome information
chr = AnnotationDbi::select(org.Hs.eg.db,keys = aeid, keytype = "ENSEMBL",columns = "CHR")
#Take non duplicated chromosomes
chr = chr[!duplicated(chr[,1]),]
dim(chr)
##Confirm that the annotation is still in the right order
all(chr[,1]== rownames(edata))
#Select the chromosome Y genes
edataY = dplyr::filter(edata,chr$CHR=="Y")
# We plot the sums of columns of samples bearing the Y chromosome against gender
boxplot(colSums(edataY) ~ pdata$gender)
points(colSums(edataY) ~ jitter(as.numeric(pdata$gender)),
col = as.numeric(pdata$gender),pch=19)
ematrix = as.matrix(edata) [rowMeans(edata) > 10000,]
heatmap(ematrix)
colramp = colorRampPalette(c(3,"white",2))(9)
heatmap(ematrix,col = colramp)
#To remove the automatic clustering
heatmap(ematrix,col = colramp, Rowv = NA, Colv = NA)
heatmap.2(ematrix,col = colramp, Rowv = NA, Colv = NA, dendogram = "none", scale = "row", trace = "none")
tropical = c('darkorange','dodgerblue','hotpink','limegreen','yellow')
palette(tropical)
par(pch=19)
library(devtools)
library(Biobase)
library(limma)
library(edge)
library(genefilter)
library(qvalue)
library(devtools)
library(Biobase)
library(limma)
library(edge)
library(genefilter)
install.packages('ggplot2')
library('ggplot2')
install.packages('ggplot2',dependencies = 'TRUE')
install.packages('ggplot2',dependencies = 'TRUE')
install.packages("ggplot2")
install.packages("ggplot2")
tropical = c('darkorange','dodgerblue','hotpink','limegreen','yellow')
palette(tropical)
par(pch=19)
library(devtools)
library(Biobase)
library(limma)
library(edge)
library(genefilter)
library(qvalue)
library(devtools)
